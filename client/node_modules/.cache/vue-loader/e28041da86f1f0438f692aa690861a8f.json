{"remainingRequest":"/home/nicolas/Desktop/TibiaIdle/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/nicolas/Desktop/TibiaIdle/client/src/components/ComponentCanvas.vue?vue&type=template&id=7425f435&scoped=true","dependencies":[{"path":"/home/nicolas/Desktop/TibiaIdle/client/src/components/ComponentCanvas.vue","mtime":1616731414655},{"path":"/home/nicolas/Desktop/TibiaIdle/client/node_modules/cache-loader/dist/cjs.js","mtime":1616706506688},{"path":"/home/nicolas/Desktop/TibiaIdle/client/node_modules/babel-loader/lib/index.js","mtime":1616706506660},{"path":"/home/nicolas/Desktop/TibiaIdle/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616706507556},{"path":"/home/nicolas/Desktop/TibiaIdle/client/node_modules/cache-loader/dist/cjs.js","mtime":1616706506688},{"path":"/home/nicolas/Desktop/TibiaIdle/client/node_modules/vue-loader-v16/dist/index.js","mtime":1616706507556}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8Y2FudmFzIHJlZj0iZG9tQ2FudmFzIiB3aWR0aD0iMzIwIiBoZWlnaHQ9IjMyMCIgc3R5bGU9InRyYW5zZm9ybTpzY2FsZSgyKTttYXJnaW4tdG9wOjE1MHB4O2ltYWdlLXJlbmRlcmluZzogcGl4ZWxhdGVkOyI+CiAgICAgICAgQ2FudmFzIG5vdCBzdXBwb3J0ZWQKICAgIDwvY2FudmFzPgo="},{"version":3,"sources":["/home/nicolas/Desktop/TibiaIdle/client/src/components/ComponentCanvas.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/nicolas/Desktop/TibiaIdle/client/src/components/ComponentCanvas.vue","sourceRoot":"","sourcesContent":["<template>\n    <canvas ref=\"domCanvas\" width=\"320\" height=\"320\" style=\"transform:scale(2);margin-top:150px;image-rendering: pixelated;\">\n        Canvas not supported\n    </canvas>\n</template>\n\n<script>\n    import io from \"socket.io-client\"\n    import {Entity, EntityListDict} from \"../scripts/Entity.js\"\n\n    export default {\n        name: 'ComponentCanvas',\n        data (){\n            return {\n                socket: {},\n                context: {},\n\n                playerList: [],\n                playerSprites: [\n                    require('../assets/priest1/v1/priest1_v1_1.png'),\n                    require('../assets/priest2/v1/priest2_v1_1.png'),\n                    require('../assets/priest3/v1/priest3_v1_1.png'),\n                ],\n                enemySprites: [\n                    require('../assets/skeleton/v1/skeleton2_v1_1.png'),\n                    require('../assets/skeleton/v1/skeleton2_v1_2.png'),\n                    require('../assets/skeleton/v1/skeleton2_v1_3.png'),\n                    require('../assets/skeleton/v1/skeleton2_v1_4.png'),\n                ],\n                background: new Image(),                \n                sprite_char: new Image(),\n                sprite_enemy: new Image(),\n            }\n        },\n        created() {\n            this.socket = io(\"http://localhost:3000\", {transports:['websocket']});\n            this.background.src = require(\"../assets/map.jpeg\");\n            this.sprite_char.className += \"char_\"\n        },\n        mounted() {\n            this.canvas = this.$refs.domCanvas;\n            this.context = this.canvas.getContext('2d');\n\n            var that = this;\n            this.socket.on(\"serverUpdate\", data => {\n                if(\"playerList\" in data){\n                    that.playerList = data.playerList;\n                }\n                if (\"enemyList\" in data){\n                    that.enemyList = data.enemyList;\n                }\n                // console.log(data);\n                that.render();\n            });\n\n            window.addEventListener('keypress', function(e){\n                console.log(that.enemyList)\n                var keypressed = e.key;\n                that.socket.emit('clientKeyPressed', keypressed);\n            });\n\n            this.canvas.addEventListener('click', function(e) {\n                console.log(\"Click\")\n                const canvasRect = that.canvas.getBoundingClientRect();\n                const position = {\n                    x: e.clientX - canvasRect.left,\n                    y: e.clientY - canvasRect.top \n                } \n                that.socket.emit('clientMouseClicked', position)\n            })\n\n        },\n        methods: {\n            render(){\n                // Não sei pra que serve mas tem que usar\n                this.context.save();\n\n                // Atualiza a posicao da camera do player\n                var playerCam = this.playerList[this.socket.id].cam;\n                this.context.translate(-playerCam.x, -playerCam.y);\n\n                // Desenha o background antes pra ficar atras dos players\n                this.context.drawImage(this.background, 0, 0);   \n\n\n                for( const [key, value] of Object.entries(this.playerList)){\n                    this.sprite_char.src = this.playerSprites[value.sprite];\n                    this.context.drawImage(this.sprite_char, 0, 0, 16, 16, value.position.x, value.position.y, 16, 16);   \n                }\n\n                for( const [key, value] of Object.entries(this.enemyList)){\n                    this.sprite_enemy.src = this.enemySprites[value.sprite];\n                    this.context.drawImage(this.sprite_enemy, 0, 0, 16, 16, value.position.x, value.position.y, 16, 16);   \n                }\n\n\n                // Não sei pra que serve mas tem que usar\n                this.context.restore();\n            }\n        }\n\n    }\n</script>\n\n<style scoped>\n\n.char_ {\n    width: 50px;\n}\n\n</style>"]}]}