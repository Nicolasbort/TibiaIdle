{"remainingRequest":"/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/babel-loader/lib/index.js!/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/iago/Documentos/Tibidle/TibiaIdle/client/src/components/ComponentCanvas.vue?vue&type=template&id=7425f435","dependencies":[{"path":"/home/iago/Documentos/Tibidle/TibiaIdle/client/src/components/ComponentCanvas.vue","mtime":1616685697943},{"path":"/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/cache-loader/dist/cjs.js","mtime":1616639965533},{"path":"/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/babel-loader/lib/index.js","mtime":1616639965457},{"path":"/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616639967465},{"path":"/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/cache-loader/dist/cjs.js","mtime":1616639965533},{"path":"/home/iago/Documentos/Tibidle/TibiaIdle/client/node_modules/vue-loader-v16/dist/index.js","mtime":1616639967461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgcmVmOiAiZG9tQ2FudmFzIiwKICB3aWR0aDogIjMyMCIsCiAgaGVpZ2h0OiAiMzIwIiwKICBzdHlsZTogewogICAgInRyYW5zZm9ybSI6ICJzY2FsZSgyKSIsCiAgICAibWFyZ2luLXRvcCI6ICIxNTBweCIsCiAgICAiaW1hZ2UtcmVuZGVyaW5nIjogInBpeGVsYXRlZCIsCiAgICAiLXdlYmtpdC1ib3gtc2hhZG93IjogImluc2V0IDBweCAwcHggNDBweCAyMHB4IHJnYmEoMzcsMTgsMjcsMSkiLAogICAgIi1tb3otYm94LXNoYWRvdyI6ICJpbnNldCAwcHggMHB4IDQwcHggMjBweCByZ2JhKDM3LDE4LDI3LDEpIgogIH0KfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImNhbnZhcyIsIF9ob2lzdGVkXzEsICIgQ2FudmFzIG5vdCBzdXBwb3J0ZWQgIiwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICk7Cn0="},{"version":3,"sources":["/home/iago/Documentos/Tibidle/TibiaIdle/client/src/components/ComponentCanvas.vue"],"names":[],"mappings":";;AACY,EAAA,GAAG,EAAC,W;AAAY,EAAA,KAAK,EAAC,K;AAAM,EAAA,MAAM,EAAC,K;AAAM,EAAA,KAA8L,EAA9L;AAAA,iBAAA,UAAA;AAAA,kBAAA,OAAA;AAAA,uBAAA,WAAA;AAAA,0BAAA,0CAAA;AAAA,uBAAA;AAAA;;;uBAAjD,YAAA,CAES,QAFT,EAAA,UAAA,EAAgP,wBAAhP,EAEA;AAAA;AAFA,G","sourcesContent":["<template>\n    <canvas ref=\"domCanvas\" width=\"320\" height=\"320\" style=\"transform:scale(2);margin-top:150px;image-rendering: pixelated;-webkit-box-shadow: inset 0px 0px 40px 20px rgba(37,18,27,1);-moz-box-shadow: inset 0px 0px 40px 20px rgba(37,18,27,1);\">\n        Canvas not supported\n    </canvas>\n</template>\n\n<script>\n    import io from \"socket.io-client\"\n    import {Entity, EntityListDict} from \"../scripts/Entity.js\"\n\n    export default {\n        name: 'ComponentCanvas',\n        data (){\n            return {\n                socket: {},\n                context: {},\n\n                playerList: [],\n                playerSprites: [\n                    require('../assets/priest1/v1/priest1_v1_1.png'),\n                    require('../assets/priest2/v1/priest2_v1_1.png'),\n                    require('../assets/priest3/v1/priest3_v1_1.png'),\n                ],\n                background: new Image()\n            }\n        },\n        created() {\n            this.socket = io(\"http://localhost:3000\", {transports:['websocket']});\n            this.background.src = require(\"../assets/map.jpeg\");\n        },\n        mounted() {\n            this.context = this.$refs.domCanvas.getContext('2d');\n\n            var that = this;\n            this.socket.on(\"serverUpdate\", data => {\n                if(\"playerList\" in data){\n                    that.playerList = data.playerList;\n                }\n                that.render();\n            });\n\n            window.addEventListener('keypress', function(e){\n                var keypressed = e.key;\n                that.socket.emit('clientKeyPressed', keypressed);\n            });\n        },\n        methods: {\n            render(){\n                // Não sei pra que serve mas tem que usar\n                this.context.save();\n\n                // Atualiza a posicao da camera do player\n                var playerCam = this.playerList[this.socket.id].cam;\n                this.context.translate(-playerCam.x, -playerCam.y);\n\n                // Desenha o background antes pra ficar atras dos players\n                this.context.drawImage(this.background, 0, 0);   \n\n                var sprite_char = new Image();\n                for( const [key, value] of Object.entries(this.playerList)){\n                    sprite_char.src = this.playerSprites[value.sprite];\n                    this.context.drawImage(sprite_char, 0, 0, 16, 16, value.x, value.y, 16, 16);   \n                }\n\n                // Não sei pra que serve mas tem que usar\n                this.context.restore();\n            }\n        }\n\n    }\n</script>\n\n<style scoped></style>"],"sourceRoot":""}]}